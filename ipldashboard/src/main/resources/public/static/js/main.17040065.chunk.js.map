{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","console","log","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yZAKaA,EAAkB,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MACvC,IAAKA,EAAO,OAAO,KACnB,IAAMC,EAAYD,EAAME,QAAUH,EAAWC,EAAMG,MAAQH,EAAME,MAC3DE,EAAc,iBAAaH,GAC3BI,EAAaN,IAAaC,EAAMM,YAEtC,OACI,sBAAKC,UAAWF,EAAa,2BAA6B,4BAA1D,UACI,gCACA,sBAAME,UAAU,KAAhB,gBACA,6BAAI,eAAC,IAAD,CAAMC,GAAIJ,EAAV,cAA4BH,EAA5B,SACJ,oBAAIM,UAAU,aAAd,SAA4BP,EAAMS,OAClC,oBAAIF,UAAU,cAAd,SAA6BP,EAAMU,QACnC,qBAAIH,UAAU,eAAd,UAA8BP,EAAMM,YAApC,WAAyDN,EAAMW,aAA/D,IAA8EX,EAAMY,aAGpF,sBAAKL,UAAU,oBAAf,UACA,+CACA,4BAAIP,EAAME,QACV,gDACA,4BAAIF,EAAMG,QACV,kDACA,4BAAIH,EAAMa,gBACV,yCACA,8BAAIb,EAAMc,QAAV,KAAqBd,EAAMe,kBCxB1BC,G,MAAiB,SAAC,GAAyB,IAAvBjB,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACzC,IAAKA,EAAO,OAAO,KACnB,IAAMC,EAAYD,EAAME,QAAUH,EAAWC,EAAMG,MAAQH,EAAME,MAC3DE,EAAc,iBAAaH,GAC3BI,EAAaN,IAAaC,EAAMM,YAGtC,OACE,sBAAKC,UAAWF,EAAa,0BAA4B,2BAAzD,UACA,sBAAME,UAAU,KAAhB,gBACA,6BAAI,eAAC,IAAD,CAAMC,GAAIJ,EAAV,cAA4BH,EAA5B,SACF,oBAAGM,UAAU,eAAb,UACGP,EAAMM,YADT,WAC8BN,EAAMW,aADpC,IACmDX,EAAMY,e,QCVlDK,G,MAAW,WACtB,MAAwBC,mBAAS,CAAEC,QAAS,KAA5C,mBAAOC,EAAP,KAAaC,EAAb,KACQtB,EAAauB,cAAbvB,SAWR,OAVAwB,qBAAU,YACO,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,8BAAD,OAA+B1B,IAD3C,cACV2B,EADU,gBAEGA,EAASC,OAFZ,OAEVC,EAFU,OAGhBP,EAAQO,GACRC,QAAQC,IAAIF,GAJI,2CAAH,qDAMfG,KACC,CAAChC,IAECqB,GAASA,EAAKrB,SAIjB,sBAAKQ,UAAU,WAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,oBAAIA,UAAU,YAAd,SAA2Ba,EAAKrB,aAElC,sBAAKQ,UAAU,mBAAf,0BAEE,cAAC,WAAD,CACEqB,KAAM,CACJ,CAAEI,MAAO,SAAUC,MAAOb,EAAKc,aAAed,EAAKe,UAAWC,MAAO,WACrE,CAAEJ,MAAO,OAAQC,MAAOb,EAAKe,UAAWC,MAAO,iBAIrD,sBAAK7B,UAAU,uBAAf,UACE,gDACA,cAAC,EAAD,CAAiBR,SAAUqB,EAAKrB,SAAUC,MAAOoB,EAAKD,QAAQ,QAE/DC,EAAKD,QAAQkB,MAAM,GAAGC,KAAI,SAACtC,GAAD,OACzB,cAAC,EAAD,CAA+BD,SAAUqB,EAAKrB,SAAUC,MAAOA,GAA1CA,EAAMuC,OAE7B,qBAAKhC,UAAU,YAAf,SACE,cAAC,IAAD,CAAMC,GAAE,iBAAYT,EAAZ,oBAAgCyC,QAAxC,yBAxBG,kDChBEC,G,MAAe,SAAC,GAKzB,IALyC,IAAf1C,EAAc,EAAdA,SACtB2C,EAAO,GAIFC,EAHSH,OAGMG,GAFRH,OAEsBG,IAClCD,EAAME,KAAKD,GAGf,OACI,oBAAIpC,UAAU,eAAd,SAEQmC,EAAMJ,KAAI,SAAAO,GAAI,OACV,6BACI,cAAC,IAAD,CAAMrC,GAAE,iBAAYT,EAAZ,oBAAgC8C,GAAxC,SAAiDA,KAD5CA,UCXhBC,G,MAAY,WACvB,MAA8B5B,mBAAS,IAAvC,mBAAOC,EAAP,KAAgB4B,EAAhB,KACA,EAAwBzB,cAAjBvB,EAAP,EAAOA,SAAS8C,EAAhB,EAAgBA,KAYhB,OAXAtB,qBAAU,YACU,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,8BAAD,OACI1B,EADJ,yBAC6B8C,IAFtC,cACbnB,EADa,gBAIAA,EAASC,OAJT,OAIbC,EAJa,OAKnBmB,EAAWnB,GALQ,2CAAH,qDAOlBoB,KACC,CAACjD,EAAU8C,IAGZ,sBAAKtC,UAAU,YAAf,UACE,sBAAKA,UAAU,eAAf,UACE,+CACA,cAAC,EAAD,CAAcR,SAAUA,OAE1B,gCACA,qBAAIQ,UAAU,eAAd,UAA8BR,EAA9B,eAAoD8C,KAElD1B,EAAQmB,KAAI,SAAAtC,GAAK,OAAI,cAAC,EAAD,CAAgCD,SAAUA,EAAUC,MAAOA,GAArCA,EAAMuC,eC1B5CU,G,MAAW,SAAC,GAAgB,IAAflD,EAAc,EAAdA,SAEtB,OACI,qBAAKQ,UAAU,WAAf,SACI,6BACI,cAAC,IAAD,CAAMC,GAAE,iBAAYT,GAApB,SACCA,UCJJmD,G,MAAW,WAEtB,MAA0BhC,mBAAS,IAAnC,mBAAOiC,EAAP,KAAcC,EAAd,KAcA,OAbA7B,qBAAU,YACW,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,8BADT,cACdC,EADc,gBAEDA,EAASC,OAFR,OAEdC,EAFc,OAGpBwB,EAASxB,GACTC,QAAQC,IAAIF,GAJQ,2CAAH,qDAMnByB,KAGC,IAID,sBAAK9C,UAAU,WAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,oBAAIA,UAAU,WAAd,uCAEF,qBAAKA,UAAU,YAAf,SACM4C,EAAMb,KAAI,SAAAlB,GAAI,OAAI,cAAC,EAAD,CAAwBrB,SAAWqB,EAAKrB,UAAzBqB,EAAKmB,cCFnCe,MApBf,WACE,OACE,qBAAK/C,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgD,KAAK,iCAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cCNGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.17040065.chunk.js","sourcesContent":["import { React } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './MatchDetailCard.scss';\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    \r\n    return (\r\n        <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n            <div>\r\n            <span className=\"vs\">vs</span>\r\n            <h1><Link to={otherTeamRoute}> {otherTeam} </Link></h1>\r\n            <h2 className=\"match-date\">{match.date}</h2>\r\n            <h3 className=\"match-venue\">{match.venue}</h3>\r\n            <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n            </div>\r\n\r\n            <div className=\"additional-detail\">\r\n            <h3>First Innings</h3>\r\n            <p>{match.team1}</p>\r\n            <h3>Second Innings</h3>\r\n            <p>{match.team2}</p>\r\n            <h3>Man Of The Match</h3>\r\n            <p>{match.playerOfMatch}</p>\r\n            <h3>Umpires</h3>\r\n            <p>{match.umpire1}, {match.umpire2}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({ teamName, match }) => {\r\n  if (!match) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n\r\n\r\n  return (\r\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n    <span className=\"vs\">vs</span>\r\n    <h1><Link to={otherTeamRoute}> {otherTeam} </Link></h1>\r\n      <p className=\"match-result\">\r\n        {match.matchWinner} won by {match.resultMargin} {match.result}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import { React, useEffect, useState } from \"react\";\r\nimport { useParams, Link} from \"react-router-dom\";\r\nimport { MatchDetailCard } from \"../components/MatchDetailCard\";\r\nimport { MatchSmallCard } from \"../components/MatchSmallCard\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\n\r\nimport \"./TeamPage.scss\";\r\nexport const TeamPage = () => {\r\n  const [team, setTeam] = useState({ matches: [] });\r\n  const { teamName } = useParams();\r\n  useEffect(() => {\r\n    const fetchTeam = async () => {\r\n      const response = await fetch(`http://localhost:8080/team/${teamName}`);\r\n      const data = await response.json();\r\n      setTeam(data);\r\n      console.log(data);\r\n    };\r\n    fetchTeam();\r\n  }, [teamName]);\r\n  //if proper teamname is not given in the url\r\n  if (!team || !team.teamName) {\r\n    return <h1>Team Not Found</h1>;\r\n  }\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className=\"team-name-section\">\r\n        <h1 className=\"team-name\">{team.teamName}</h1>\r\n      </div>\r\n      <div className=\"win-loss-section\">\r\n        wins / losses\r\n        <PieChart\r\n          data={[\r\n            { title: \"Losses\", value: team.totalMatches - team.totalWins, color: \"#a34d5d\" },\r\n            { title: \"Wins\", value: team.totalWins, color: \"#4da375\" },\r\n          ]}\r\n        />\r\n      </div>\r\n      <div className=\"match-detail-section\">\r\n        <h3>Latest matches</h3>\r\n        <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\r\n      </div>\r\n      {team.matches.slice(1).map((match) => (\r\n        <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />\r\n      ))}\r\n      <div className=\"more-link\">\r\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n    let years= [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return(\r\n        <ol className=\"YearSelector\">\r\n            {\r\n                years.map(year => (\r\n                    <li key={year}>\r\n                        <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n                    </li>\r\n                ))\r\n            }\r\n        </ol>\r\n    )\r\n}","import { React, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport {MatchDetailCard} from \"../components/MatchDetailCard\";\r\nimport {YearSelector} from \"../components/YearSelector\";\r\n\r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n  const [matches, setMatches] = useState([]);\r\n  const {teamName,year} = useParams();\r\n  useEffect(() => {\r\n    const fetchMatches = async () => {\r\n      const response = await fetch(\r\n        `http://localhost:8080/team/${teamName}/matches?year=${year}`\r\n      );\r\n      const data = await response.json();\r\n      setMatches(data);\r\n    };\r\n    fetchMatches();\r\n  }, [teamName, year]);\r\n\r\n  return (\r\n    <div className=\"MatchPage\">\r\n      <div className=\"yearSelector\">\r\n        <h3> Select Year </h3>\r\n        <YearSelector teamName={teamName} />\r\n      </div>\r\n      <div>\r\n      <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n      {\r\n        matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} /> )\r\n      }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {React} from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './TeamTile.scss';\r\nexport const TeamTile = ({teamName}) => {\r\n\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>\r\n                {teamName}\r\n                </Link>\r\n            </h1>\r\n        </div>\r\n    )\r\n}","import { React, useEffect, useState } from \"react\";\r\nimport { TeamTile } from \"../components/TeamTile\";\r\n\r\n\r\nimport \"./HomePage.scss\";\r\n\r\nexport const HomePage = () => {\r\n\r\n  const [teams, setTeams] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAllTeams = async () => {\r\n      const response = await fetch(`http://localhost:8080/team`);\r\n      const data = await response.json();\r\n      setTeams(data);\r\n      console.log(data);\r\n    };\r\n    fetchAllTeams();\r\n\r\n\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <div className=\"HomePage\">\r\n      <div className=\"header-section\">\r\n        <h1 className=\"app-name\">Sandeep's IPL Dashboard</h1>\r\n      </div>\r\n      <div className=\"team-grid\">\r\n          { teams.map(team => <TeamTile key={team.id} teamName ={team.teamName} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.scss\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { TeamPage } from \"./pages/TeamPage\";\nimport { MatchPage } from \"./pages/MatchPage\";\nimport { HomePage } from \"./pages/HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}